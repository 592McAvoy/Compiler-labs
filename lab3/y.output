Nonterminals useless in grammar

   decs_nonempty
   decs_nonempty_s
   nonemptyactuals
   one
   oneormore
   rec_nonempty
   tyfields_nonempty


State 1 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 32 conflicts: 1 reduce/reduce
State 70 conflicts: 12 shift/reduce
State 90 conflicts: 13 shift/reduce
State 91 conflicts: 12 shift/reduce
State 118 conflicts: 12 shift/reduce
State 119 conflicts: 12 shift/reduce
State 136 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 lvalue: ID
    3       | lvalue DOT ID
    4       | lvalue LBRACK exp RBRACK
    5       | ID LBRACK exp RBRACK

    6 exp: lvalue
    7    | LPAREN sequencing RPAREN
    8    | NIL
    9    | INT
   10    | STRING
   11    | MINUS exp
   12    | ID LPAREN actuals RPAREN
   13    | exp PLUS exp
   14    | exp MINUS exp
   15    | exp TIMES exp
   16    | exp DIVIDE exp
   17    | exp EQ exp
   18    | exp NEQ exp
   19    | exp LT exp
   20    | exp LE exp
   21    | exp GT exp
   22    | exp GE exp
   23    | exp AND exp
   24    | exp OR exp
   25    | ID LBRACE rec RBRACE
   26    | ID LBRACK exp RBRACK OF exp
   27    | lvalue ASSIGN exp
   28    | IF exp THEN exp ELSE exp
   29    | IF exp THEN exp
   30    | WHILE exp DO exp
   31    | FOR ID ASSIGN exp TO exp DO exp
   32    | BREAK
   33    | LET decs IN expseq END

   34 expseq: sequencing_exps

   35 sequencing: exp SEMICOLON sequencing
   36           | exp
   37           | %empty

   38 sequencing_exps: exp SEMICOLON sequencing_exps
   39                | exp
   40                | %empty

   41 actuals: exp COMMA actuals
   42        | exp
   43        | %empty

   44 vardec: VAR ID ASSIGN exp
   45       | VAR ID COLON ID ASSIGN exp

   46 ty: ID
   47   | LBRACE tyfields RBRACE
   48   | ARRAY OF ID

   49 tyfield: ID COLON ID

   50 tyfields: tyfield COMMA tyfields
   51         | tyfield
   52         | %empty

   53 tydec_one: TYPE ID EQ ty

   54 tydec: tydec_one
   55      | tydec_one tydec

   56 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   57           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   58 fundec: fundec_one
   59       | fundec_one fundec

   60 dec: tydec
   61    | vardec
   62    | fundec

   63 decs: dec
   64     | dec decs
   65     | %empty

   66 rec_one: ID EQ exp

   67 rec: rec_one COMMA rec
   68    | rec_one
   69    | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 2 3 5 12 25 26 31 44 45 46 48 49 53 56 57 66
STRING (259) 10
INT (260) 9
COMMA (261) 41 50 67
COLON (262) 45 49 57
SEMICOLON (263) 35 38
LPAREN (264) 7 12 56 57
RPAREN (265) 7 12 56 57
LBRACK (266) 4 5 26
RBRACK (267) 4 5 26
LBRACE (268) 25 47
RBRACE (269) 25 47
DOT (270) 3
PLUS (271) 13
MINUS (272) 11 14
TIMES (273) 15
DIVIDE (274) 16
EQ (275) 17 53 56 57 66
NEQ (276) 18
LT (277) 19
LE (278) 20
GT (279) 21
GE (280) 22
AND (281) 23
OR (282) 24
ASSIGN (283) 27 31 44 45
ARRAY (284) 48
IF (285) 28 29
THEN (286) 28 29
ELSE (287) 28
WHILE (288) 30
FOR (289) 31
TO (290) 31
DO (291) 30 31
LET (292) 33
IN (293) 33
END (294) 33
OF (295) 26 48
BREAK (296) 32
NIL (297) 8
FUNCTION (298) 56 57
VAR (299) 44 45
TYPE (300) 53
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
lvalue (49)
    on left: 2 3 4 5, on right: 3 4 6 27
exp (50)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33, on right: 1 4 5 11 13 14 15 16 17 18 19
    20 21 22 23 24 26 27 28 29 30 31 35 36 38 39 41 42 44 45 56 57
    66
expseq (51)
    on left: 34, on right: 33
sequencing (52)
    on left: 35 36 37, on right: 7 35
sequencing_exps (53)
    on left: 38 39 40, on right: 34 38
actuals (54)
    on left: 41 42 43, on right: 12 41
vardec (55)
    on left: 44 45, on right: 61
ty (56)
    on left: 46 47 48, on right: 53
tyfield (57)
    on left: 49, on right: 50 51
tyfields (58)
    on left: 50 51 52, on right: 47 50 56 57
tydec_one (59)
    on left: 53, on right: 54 55
tydec (60)
    on left: 54 55, on right: 55 60
fundec_one (61)
    on left: 56 57, on right: 58 59
fundec (62)
    on left: 58 59, on right: 59 62
dec (63)
    on left: 60 61 62, on right: 63 64
decs (64)
    on left: 63 64 65, on right: 33 64
rec_one (65)
    on left: 66, on right: 67 68
rec (66)
    on left: 67 68 69, on right: 25 67


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    lvalue   go to state 13
    exp      go to state 14


State 1

    2 lvalue: ID .
    5       | ID . LBRACK exp RBRACK
   12 exp: ID . LPAREN actuals RPAREN
   25    | ID . LBRACE rec RBRACE
   26    | ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17

    LBRACK    [reduce using rule 2 (lvalue)]
    $default  reduce using rule 2 (lvalue)


State 2

   10 exp: STRING .

    $default  reduce using rule 10 (exp)


State 3

    9 exp: INT .

    $default  reduce using rule 9 (exp)


State 4

    7 exp: LPAREN . sequencing RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 37 (sequencing)

    lvalue      go to state 13
    exp         go to state 18
    sequencing  go to state 19


State 5

   11 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 20


State 6

   28 exp: IF . exp THEN exp ELSE exp
   29    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 21


State 7

   30 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 22


State 8

   31 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 23


State 9

   33 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 65 (decs)

    vardec      go to state 27
    tydec_one   go to state 28
    tydec       go to state 29
    fundec_one  go to state 30
    fundec      go to state 31
    dec         go to state 32
    decs        go to state 33


State 10

   32 exp: BREAK .

    $default  reduce using rule 32 (exp)


State 11

    8 exp: NIL .

    $default  reduce using rule 8 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 34


State 13

    3 lvalue: lvalue . DOT ID
    4       | lvalue . LBRACK exp RBRACK
    6 exp: lvalue .
   27    | lvalue . ASSIGN exp

    LBRACK  shift, and go to state 35
    DOT     shift, and go to state 36
    ASSIGN  shift, and go to state 37

    $default  reduce using rule 6 (exp)


State 14

    1 program: exp .
   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 1 (program)


State 15

   12 exp: ID LPAREN . actuals RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 43 (actuals)

    lvalue   go to state 13
    exp      go to state 50
    actuals  go to state 51


State 16

    5 lvalue: ID LBRACK . exp RBRACK
   26 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 52


State 17

   25 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 53

    $default  reduce using rule 69 (rec)

    rec_one  go to state 54
    rec      go to state 55


State 18

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   35 sequencing: exp . SEMICOLON sequencing
   36           | exp .

    SEMICOLON  shift, and go to state 56
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    $default  reduce using rule 36 (sequencing)


State 19

    7 exp: LPAREN sequencing . RPAREN

    RPAREN  shift, and go to state 57


State 20

   11 exp: MINUS exp .
   13    | exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 11 (exp)


State 21

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   28    | IF exp . THEN exp ELSE exp
   29    | IF exp . THEN exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    THEN    shift, and go to state 58


State 22

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   30    | WHILE exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 59


State 23

   31 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 60


State 24

   56 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   57           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 61


State 25

   44 vardec: VAR . ID ASSIGN exp
   45       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 62


State 26

   53 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 63


State 27

   61 dec: vardec .

    $default  reduce using rule 61 (dec)


State 28

   54 tydec: tydec_one .
   55      | tydec_one . tydec

    TYPE  shift, and go to state 26

    TYPE      [reduce using rule 54 (tydec)]
    $default  reduce using rule 54 (tydec)

    tydec_one  go to state 28
    tydec      go to state 64


State 29

   60 dec: tydec .

    $default  reduce using rule 60 (dec)


State 30

   58 fundec: fundec_one .
   59       | fundec_one . fundec

    FUNCTION  shift, and go to state 24

    FUNCTION  [reduce using rule 58 (fundec)]
    $default  reduce using rule 58 (fundec)

    fundec_one  go to state 30
    fundec      go to state 65


State 31

   62 dec: fundec .

    $default  reduce using rule 62 (dec)


State 32

   63 decs: dec .
   64     | dec . decs

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    IN        reduce using rule 63 (decs)
    IN        [reduce using rule 65 (decs)]
    $default  reduce using rule 63 (decs)

    vardec      go to state 27
    tydec_one   go to state 28
    tydec       go to state 29
    fundec_one  go to state 30
    fundec      go to state 31
    dec         go to state 32
    decs        go to state 66


State 33

   33 exp: LET decs . IN expseq END

    IN  shift, and go to state 67


State 34

    0 $accept: program $end .

    $default  accept


State 35

    4 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 68


State 36

    3 lvalue: lvalue DOT . ID

    ID  shift, and go to state 69


State 37

   27 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 70


State 38

   13 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 71


State 39

   14 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 72


State 40

   15 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 73


State 41

   16 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 74


State 42

   17 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 75


State 43

   18 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 76


State 44

   19 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 77


State 45

   20 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 78


State 46

   21 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 79


State 47

   22 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 80


State 48

   23 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 81


State 49

   24 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 82


State 50

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   41 actuals: exp . COMMA actuals
   42        | exp .

    COMMA   shift, and go to state 83
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 42 (actuals)


State 51

   12 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 84


State 52

    5 lvalue: ID LBRACK exp . RBRACK
   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   26    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 85
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 53

   66 rec_one: ID . EQ exp

    EQ  shift, and go to state 86


State 54

   67 rec: rec_one . COMMA rec
   68    | rec_one .

    COMMA  shift, and go to state 87

    $default  reduce using rule 68 (rec)


State 55

   25 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 88


State 56

   35 sequencing: exp SEMICOLON . sequencing

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 37 (sequencing)

    lvalue      go to state 13
    exp         go to state 18
    sequencing  go to state 89


State 57

    7 exp: LPAREN sequencing RPAREN .

    $default  reduce using rule 7 (exp)


State 58

   28 exp: IF exp THEN . exp ELSE exp
   29    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 90


State 59

   30 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 91


State 60

   31 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 92


State 61

   56 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   57           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 93


State 62

   44 vardec: VAR ID . ASSIGN exp
   45       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 94
    ASSIGN  shift, and go to state 95


State 63

   53 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 96


State 64

   55 tydec: tydec_one tydec .

    $default  reduce using rule 55 (tydec)


State 65

   59 fundec: fundec_one fundec .

    $default  reduce using rule 59 (fundec)


State 66

   64 decs: dec decs .

    $default  reduce using rule 64 (decs)


State 67

   33 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 40 (sequencing_exps)

    lvalue           go to state 13
    exp              go to state 97
    expseq           go to state 98
    sequencing_exps  go to state 99


State 68

    4 lvalue: lvalue LBRACK exp . RBRACK
   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    RBRACK  shift, and go to state 100
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 69

    3 lvalue: lvalue DOT ID .

    $default  reduce using rule 3 (lvalue)


State 70

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   27    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


State 71

   13 exp: exp . PLUS exp
   13    | exp PLUS exp .
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 13 (exp)


State 72

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   14    | exp MINUS exp .
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 14 (exp)


State 73

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   15    | exp TIMES exp .
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 15 (exp)


State 74

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   16    | exp DIVIDE exp .
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 16 (exp)


State 75

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   17    | exp EQ exp .
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 76

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   18    | exp NEQ exp .
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 77

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   19    | exp LT exp .
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 78

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   20    | exp LE exp .
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 79

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   21    | exp GT exp .
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


State 80

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   22    | exp GE exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


State 81

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   23    | exp AND exp .
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47

    $default  reduce using rule 23 (exp)


State 82

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   24    | exp OR exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48

    $default  reduce using rule 24 (exp)


State 83

   41 actuals: exp COMMA . actuals

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 43 (actuals)

    lvalue   go to state 13
    exp      go to state 50
    actuals  go to state 101


State 84

   12 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 12 (exp)


State 85

    5 lvalue: ID LBRACK exp RBRACK .
   26 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 102

    $default  reduce using rule 5 (lvalue)


State 86

   66 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 103


State 87

   67 rec: rec_one COMMA . rec

    ID  shift, and go to state 53

    $default  reduce using rule 69 (rec)

    rec_one  go to state 54
    rec      go to state 104


State 88

   25 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 25 (exp)


State 89

   35 sequencing: exp SEMICOLON sequencing .

    $default  reduce using rule 35 (sequencing)


State 90

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   28    | IF exp THEN exp . ELSE exp
   29    | IF exp THEN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    ELSE    shift, and go to state 105

    PLUS      [reduce using rule 29 (exp)]
    MINUS     [reduce using rule 29 (exp)]
    TIMES     [reduce using rule 29 (exp)]
    DIVIDE    [reduce using rule 29 (exp)]
    EQ        [reduce using rule 29 (exp)]
    NEQ       [reduce using rule 29 (exp)]
    LT        [reduce using rule 29 (exp)]
    LE        [reduce using rule 29 (exp)]
    GT        [reduce using rule 29 (exp)]
    GE        [reduce using rule 29 (exp)]
    AND       [reduce using rule 29 (exp)]
    OR        [reduce using rule 29 (exp)]
    ELSE      [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)


State 91

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   30    | WHILE exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 30 (exp)]
    MINUS     [reduce using rule 30 (exp)]
    TIMES     [reduce using rule 30 (exp)]
    DIVIDE    [reduce using rule 30 (exp)]
    EQ        [reduce using rule 30 (exp)]
    NEQ       [reduce using rule 30 (exp)]
    LT        [reduce using rule 30 (exp)]
    LE        [reduce using rule 30 (exp)]
    GT        [reduce using rule 30 (exp)]
    GE        [reduce using rule 30 (exp)]
    AND       [reduce using rule 30 (exp)]
    OR        [reduce using rule 30 (exp)]
    $default  reduce using rule 30 (exp)


State 92

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   31    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    TO      shift, and go to state 106


State 93

   56 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   57           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 107

    $default  reduce using rule 52 (tyfields)

    tyfield   go to state 108
    tyfields  go to state 109


State 94

   45 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 110


State 95

   44 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 111


State 96

   53 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 112
    LBRACE  shift, and go to state 113
    ARRAY   shift, and go to state 114

    ty  go to state 115


State 97

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   38 sequencing_exps: exp . SEMICOLON sequencing_exps
   39                | exp .

    SEMICOLON  shift, and go to state 116
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    $default  reduce using rule 39 (sequencing_exps)


State 98

   33 exp: LET decs IN expseq . END

    END  shift, and go to state 117


State 99

   34 expseq: sequencing_exps .

    $default  reduce using rule 34 (expseq)


State 100

    4 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 4 (lvalue)


State 101

   41 actuals: exp COMMA actuals .

    $default  reduce using rule 41 (actuals)


State 102

   26 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 118


State 103

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   66 rec_one: ID EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 66 (rec_one)


State 104

   67 rec: rec_one COMMA rec .

    $default  reduce using rule 67 (rec)


State 105

   28 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 119


State 106

   31 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 120


State 107

   49 tyfield: ID . COLON ID

    COLON  shift, and go to state 121


State 108

   50 tyfields: tyfield . COMMA tyfields
   51         | tyfield .

    COMMA  shift, and go to state 122

    $default  reduce using rule 51 (tyfields)


State 109

   56 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   57           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 123


State 110

   45 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 124


State 111

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   44 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 44 (vardec)


State 112

   46 ty: ID .

    $default  reduce using rule 46 (ty)


State 113

   47 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 107

    $default  reduce using rule 52 (tyfields)

    tyfield   go to state 108
    tyfields  go to state 125


State 114

   48 ty: ARRAY . OF ID

    OF  shift, and go to state 126


State 115

   53 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 53 (tydec_one)


State 116

   38 sequencing_exps: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 40 (sequencing_exps)

    lvalue           go to state 13
    exp              go to state 97
    sequencing_exps  go to state 127


State 117

   33 exp: LET decs IN expseq END .

    $default  reduce using rule 33 (exp)


State 118

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   26    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    AND       [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 119

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   28    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 28 (exp)]
    MINUS     [reduce using rule 28 (exp)]
    TIMES     [reduce using rule 28 (exp)]
    DIVIDE    [reduce using rule 28 (exp)]
    EQ        [reduce using rule 28 (exp)]
    NEQ       [reduce using rule 28 (exp)]
    LT        [reduce using rule 28 (exp)]
    LE        [reduce using rule 28 (exp)]
    GT        [reduce using rule 28 (exp)]
    GE        [reduce using rule 28 (exp)]
    AND       [reduce using rule 28 (exp)]
    OR        [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)


State 120

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   31    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 128


State 121

   49 tyfield: ID COLON . ID

    ID  shift, and go to state 129


State 122

   50 tyfields: tyfield COMMA . tyfields

    ID  shift, and go to state 107

    $default  reduce using rule 52 (tyfields)

    tyfield   go to state 108
    tyfields  go to state 130


State 123

   56 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   57           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 131
    EQ     shift, and go to state 132


State 124

   45 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 133


State 125

   47 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 134


State 126

   48 ty: ARRAY OF . ID

    ID  shift, and go to state 135


State 127

   38 sequencing_exps: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 38 (sequencing_exps)


State 128

   31 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 136


State 129

   49 tyfield: ID COLON ID .

    $default  reduce using rule 49 (tyfield)


State 130

   50 tyfields: tyfield COMMA tyfields .

    $default  reduce using rule 50 (tyfields)


State 131

   57 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 137


State 132

   56 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 138


State 133

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   45 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 45 (vardec)


State 134

   47 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 47 (ty)


State 135

   48 ty: ARRAY OF ID .

    $default  reduce using rule 48 (ty)


State 136

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   31    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 31 (exp)]
    MINUS     [reduce using rule 31 (exp)]
    TIMES     [reduce using rule 31 (exp)]
    DIVIDE    [reduce using rule 31 (exp)]
    EQ        [reduce using rule 31 (exp)]
    NEQ       [reduce using rule 31 (exp)]
    LT        [reduce using rule 31 (exp)]
    LE        [reduce using rule 31 (exp)]
    GT        [reduce using rule 31 (exp)]
    GE        [reduce using rule 31 (exp)]
    AND       [reduce using rule 31 (exp)]
    OR        [reduce using rule 31 (exp)]
    $default  reduce using rule 31 (exp)


State 137

   57 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 139


State 138

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   56 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 56 (fundec_one)


State 139

   57 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 140


State 140

   13 exp: exp . PLUS exp
   14    | exp . MINUS exp
   15    | exp . TIMES exp
   16    | exp . DIVIDE exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   57 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 57 (fundec_one)
